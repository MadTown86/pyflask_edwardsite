{% extends "./base.jinja" %}
{% block content %}
<script>
    document.getElementById('member_nav').classList.add('active')
    document.getElementById('member_nav').classList.add('text-light')
    function nextClick() {
      //Date Portion
      const nowDate = new Date()
      const dateFromH2 = document.getElementById('date').innerText
      const newDate = new Date(dateFromH2)
      const oneDayMilliseconds = 86400000
      const timeDifference = Math.abs(nowDate - newDate)
      if (timeDifference > 10 * oneDayMilliseconds) {

      } else {
        document.getElementById('next-date-button').disabled = false
        newDate.setDate(newDate.getDate()+1)
        const dateFormatted = new Intl.DateTimeFormat('en-US').format(newDate)
        document.getElementById('date').innerText = dateFormatted
        document.getElementById('hidden_date').value = dateFormatted
      }
      const hiddenDate = document.getElementById('hidden_date').value
      console.log(hiddenDate)

      //Time Portion
      const timeslots = document.getElementsByName('listGroupRadioGrid')
      const busyTimeSlotsDict = {{ json_appts }}
      const orgDateKeys = []
      const formattedDateKeys = []

      for (const [key, value] of Object.entries(busyTimeSlotsDict)) {
        orgDateKeys.push(key)
      }

      for (let i = 0; i < orgDateKeys.length; i++) {
        const formattedDate = new Intl.DateTimeFormat('en-US').format(new Date(orgDateKeys[i]))
        formattedDateKeys.push(formattedDate)
      }

      for (let i = 0; i < timeslots.length; i++) {
        if (formattedDateKeys.includes(hiddenDate)) {
          if (busyTimeSlotsDict[orgDateKeys[formattedDateKeys.indexOf(hiddenDate)]].includes(timeslots[i].value)) {
            timeslots[i].disabled = true
            timeslots[i].classList.add('bg-danger')
          } else
            timeslots[i].disabled = false
            timeslots[i].classList.remove('bg-danger')
        } else {
          timeslots[i].disabled = false
          timeslots[i].classList.remove('bg-danger')
        }
    }
    }

    function prevClick() {
      const orgDate = '{{date}}'
      const orgJavaDate = new Date(orgDate)
      const dateFromH2 = document.getElementById('date').innerText
      const newDate2 = new Date(dateFromH2)
      newDate2.setDate(newDate2.getDate()-1)
      const timeDifference2 = newDate2 - orgJavaDate
      if (timeDifference2 < 0) {
      } else {
        document.getElementById('prev-date-button').disabled = false
        const dateFormatted = new Intl.DateTimeFormat('en-US').format(newDate2)
        document.getElementById('date').innerText = dateFormatted
        document.getElementById('hidden_date').value = dateFormatted
      }
      const hiddenDate = document.getElementById('hidden_date').value
      console.log(hiddenDate)

      //Time Portion
      const timeslots = document.getElementsByName('listGroupRadioGrid')
      const busyTimeSlotsDict = {{ json_appts }}
      const orgDateKeys = []
      const formattedDateKeys = []

      for (const [key, value] of Object.entries(busyTimeSlotsDict)) {
        orgDateKeys.push(key)
      }

      for (let i = 0; i < orgDateKeys.length; i++) {
        const formattedDate = new Intl.DateTimeFormat('en-US').format(new Date(orgDateKeys[i]))
        formattedDateKeys.push(formattedDate)
      }

      for (let i = 0; i < timeslots.length; i++) {
        if (formattedDateKeys.includes(hiddenDate)) {
          if (busyTimeSlotsDict[orgDateKeys[formattedDateKeys.indexOf(hiddenDate)]].includes(timeslots[i].value)) {
            timeslots[i].disabled = true
            timeslots[i].classList.add('bg-danger')
          } else
            timeslots[i].disabled = false
            timeslots[i].classList.remove('bg-danger')
        } else {
          timeslots[i].disabled = false
          timeslots[i].classList.remove('bg-danger')
        }
    }
    }  

    function confirmClick() {
      const userId = '{{ session.user.id }}';
      const date = document.getElementById('hidden_date').value;
      console.log('DATE IN CONFIRM CLICK:', date);
      let time = '';
      const radioButtons = document.getElementsByName('listGroupRadioGrid');
      for (let i = 0; i < radioButtons.length; i++) {
        if (radioButtons[i].checked) {
          time = radioButtons[i].value;
          break;
        }
      }
      const data = {
        userId: userId,
        date: date,
        time: time
      };
      fetch('/schedule', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      })
      .then(response => response.json())
      .then(data => {
        console.log('Success:', data);
      })
      .catch((error) => {
        console.error('Error:', error);
      });
    }

    function confirmBox() {
      if (window.confirm('Are you sure you want to confirm this appointment?')) {
        confirmClick();
      } else {
        console.log('Appointment not confirmed');
      }
      
    }

    function renderTimeslots(date, timeslots, busyTimeslots=[]) {
      for (let i = 0; i < timeslots.length; i++) {
        if (timeslots[i] in busyTimeslots) {
          document.getElementById('listGroupRadioGrid_' + timeslots[i]).disabled = true;
        }
      }
    }

    const appointments = {{ json_appts | tojson }};
    console.log(appointments);

</script>
    <main>
    {% with messages = get_flashed_messages(with_categories=true) %}
    {% if messages %}
      {% for message, category in messages %}
        {% if category == 'danger' %}
        <div class="alert alert-danger alert-dismissible fade show align-items-center" role="alert">
          {{ message }}
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        {% else %}
        <div class="alert alert-success alert-dismissible fade show align-items-center" role="alert">
          {{ message }}
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        {% endif %}
      {% endfor %}
    {% else %}
    {% if timeslots and date %}
      <h1 class="text-center">Schedule</h1>
        <div class="d-flex justify-content-center schedule">
        <button id="prev-date-button" onclick="prevClick()"><span>&#8592</span></button>
        <h2 class="text-center" id="date">{{date}}</h2>
        <button id="next-date-button" onclick="nextClick()"><span>&#8594</span></button>
        </div>

      
      <form>
        <input type="hidden" name="hidden_date" id="hidden_date" value="{{date}}">
          <div class="d-flex flex-column flex-md-row p-4 gap-4 py-md-5 align-items-center justify-content-center">
            <div class="list-group list-group-radio d-grid gap-2 border-0">
              {% for timeslot in timeslots %}
                {% if timeslot in busy_today %}
                {% if loop.index == 1 %}
                    <div class="position-relative">
                    <input class="form-check-input position-absolute top-50 end-0 me-3 fs-5" type="radio" name="listGroupRadioGrid" id="listGroupRadioGrid_{{timeslot}}" value="{{timeslot}}" checked="" disabled="">
                    <label class="list-group-item rounded-3 py-3 pe-5" for="listGroupRadioGrid_{{timeslot}}">
                      <strong class="fw-semibold">{{ timeslot }}</strong>
                    </label>
                  </div>
                  {% else %}
                  <div class="position-relative">
                    <input class="form-check-input position-absolute top-50 end-0 me-3 fs-5" type="radio" name="listGroupRadioGrid" id="listGroupRadioGrid_{{timeslot}}" value="{{timeslot}}" disabled="">
                    <label class="list-group-item rounded-3 py-3 pe-5" for="listGroupRadioGrid_{{timeslot}}">
                      <strong class="fw-semibold">{{ timeslot }}</strong>
                    </label>
                  </div>
                  {% endif %}
                {% else %}
                  {% if loop.index == 1 %}
                    <div class="position-relative">
                    <input class="form-check-input position-absolute top-50 end-0 me-3 fs-5" type="radio" name="listGroupRadioGrid" id="listGroupRadioGrid_{{timeslot}}" value="{{timeslot}}" checked="">
                    <label class="list-group-item rounded-3 py-3 pe-5" for="listGroupRadioGrid_{{timeslot}}">
                      <strong class="fw-semibold">{{ timeslot }}</strong>
                    </label>
                  </div>
                  {% else %}
                  <div class="position-relative">
                    <input class="form-check-input position-absolute top-50 end-0 me-3 fs-5" type="radio" name="listGroupRadioGrid" id="listGroupRadioGrid_{{timeslot}}" value="{{timeslot}}">
                    <label class="list-group-item rounded-3 py-3 pe-5" for="listGroupRadioGrid_{{timeslot}}">
                      <strong class="fw-semibold">{{ timeslot }}</strong>
                    </label>
                  </div>
                  {% endif %}
                {% endif %}
              {% endfor %}
          <button class="btn btn-primary rounded-pill px-3" type="confirm" onclick="confirmBox()">Confirm</button>
          </div>
        </div>
      </form>
    {% endif %}
    {% endif %}
    {% endwith %}
</main>
{% endblock content %}